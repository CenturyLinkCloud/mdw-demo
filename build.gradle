buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }
    dependencies {
        classpath("com.centurylink.mdw:mdw-common:${mdwVersion}")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'

group = 'com.centurylink.mdwdemo'
version = '2.0.1'

description = "mdw-demo"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

sourceSets {
    main {
        java {
            srcDirs "src/main/java"
            srcDirs assetLoc
        }
    }
}

dependencies {
    compile group: 'com.centurylink.mdw', name: 'mdw-spring-boot', version: mdwVersion
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootVersion

    // asset package dependencies
    compileOnly fileTree(dir: "${assetLoc}", includes: ["**/*.jar"])
    compile group: 'junit', name: 'junit', version:'4.8.1'
}

bootJar {
    // Exclude assets from packaging to preserve mdw dynamicism
    // (do not overlap packages between src/main/java and assets).
    def packages = new com.centurylink.mdw.util.file.Packages(file(assetLoc))
    exclude {
        packages.isAssetOutput(it.relativePath.toString())
    }
}
