import com.centurylink.mdw.util.file.Packages

buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }
    dependencies {
        classpath("com.centurylink.mdw:mdw-common:${mdwVersion}")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'

group = 'com.centurylink.mdwdemo'
version = appVersion

description = "mdw-demo"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

sourceSets {
    main {
        java {
            srcDirs "src/main/java"
            srcDirs assetLoc
        }
    }
}

dependencies {
    compile group: 'com.centurylink.mdw', name: 'mdw-spring-boot', version: mdwVersion
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootVersion

    // asset package dependencies
    compileOnly fileTree(dir: "${assetLoc}", includes: ["**/*.jar"])
    compile group: 'junit', name: 'junit', version:'4.8.1'
}

bootJar {
    def packages = new Packages(file(assetLoc))
    exclude {
        packages.isAssetOutput(it.relativePath.toString())
    }
}

task mdwTests(type: GradleBuild) {
    dependsOn build
    buildFile = "test.gradle"
    tasks = ["test"]
    startParameter.projectProperties = [include: 'com/centurylink/mdw/tests/workflow/StartStop.test']
}