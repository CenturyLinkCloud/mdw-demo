// directly test Create Bug and A Bug's Life
start process('com.centurylink.mdw.demo.bugs/Create Bug') {
    variables = [
        request: asset('createBugRequest.json').text,
        requestHeaders: """{\"content-type\": \"application/json\", 
  \"mdw-request-id\": \"$masterRequestId\"}"""        
    ]
}

sleep 5

def bugTask = action task('${bug.title}') {
    outcome = 'Claim'
}

sleep 5

// submit a PUT request emulating commitId entry in custom page
def response = submit request('mdw-demo.postman/PUT:bugs/{id}') {
    values = ['id': bugTask.id, 'commit-id': 'fa7ba6f']
}
assert response.time < 1000 // less than a second
assert response.status.code == 200
assert response.headers['content-type'] == 'application/json'

// resolve the bug by completing its task
action task('${bug.title}') {
    outcome = 'Resolve'
}

// wait for the subflow to complete
wait process('com.centurylink.mdw.demo.bugs/A Bug\'s Life')

// validate the runtime results of both processes
verify processes('com.centurylink.mdw.demo.bugs/Create Bug',
    'com.centurylink.mdw.demo.bugs/A Bug\'s Life')